{"{\"assumptions\":{},\"sourceRoot\":\"/Users/jesusgtz/Code/Business/WorldHello/WorldHello/backend/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/jesusgtz/Code/Business/WorldHello/WorldHello/backend\",\"filename\":\"/Users/jesusgtz/Code/Business/WorldHello/WorldHello/backend/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/jesusgtz/Code/Business/WorldHello/WorldHello/backend\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.23.9:development":{"value":{"code":"import express from 'express';\nimport nodemailer from 'nodemailer';\nimport bodyParser from 'body-parser';\nconst app = express();\nconst port = 3001;\n\n// Code logic for the Middleware to parse JSON\napp.use(bodyParser.json());\n\n// Code logic endpoint to handle form submissions\napp.post('/api/sendEmail', async (req, res) => {\n  try {\n    const {\n      name,\n      email,\n      phone,\n      website,\n      companyName,\n      howCanWeHelp,\n      howDidYouHear\n    } = req.body;\n\n    // Code logic to create a nodemailer transporter\n    const transporter = nodemailer.createTransport({\n      // Your email service SMTP settings\n      service: 'outlook',\n      auth: {\n        user: 'gtz.jesus@outlook.com',\n        password: 'React!584911'\n      }\n    });\n\n    // Email content\n    const mailOptions = {\n      from: 'gtz.jesus@outlook.com',\n      to: 'recipient',\n      subject: 'WorldHello New Contact Form Submission',\n      html: `\n            <p>Name: ${name}</p>\n            <p>Email: ${email}</p>\n            <p>Phone: ${phone}</p>\n            <p>Website: ${website}</p>\n            <p>Company Name: ${companyName}</p>\n            <p>How can we help: ${howCanWeHelp}</p>\n            <p>How did you hear: ${howDidYouHear}</p>\n            `\n    };\n\n    // Send email\n    const info = await transporter.sendMail(mailOptions);\n    console.log('Email sent:', info.response);\n    res.status(200).json({\n      message: 'Email sent successfully'\n    });\n  } catch (error) {\n    console.error('Error sending email:', error.message);\n    res.status(500).json({\n      error: 'Internal Server Error'\n    });\n  }\n});\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwibm9kZW1haWxlciIsImJvZHlQYXJzZXIiLCJhcHAiLCJwb3J0IiwidXNlIiwianNvbiIsInBvc3QiLCJyZXEiLCJyZXMiLCJuYW1lIiwiZW1haWwiLCJwaG9uZSIsIndlYnNpdGUiLCJjb21wYW55TmFtZSIsImhvd0NhbldlSGVscCIsImhvd0RpZFlvdUhlYXIiLCJib2R5IiwidHJhbnNwb3J0ZXIiLCJjcmVhdGVUcmFuc3BvcnQiLCJzZXJ2aWNlIiwiYXV0aCIsInVzZXIiLCJwYXNzd29yZCIsIm1haWxPcHRpb25zIiwiZnJvbSIsInRvIiwic3ViamVjdCIsImh0bWwiLCJpbmZvIiwic2VuZE1haWwiLCJjb25zb2xlIiwibG9nIiwicmVzcG9uc2UiLCJzdGF0dXMiLCJtZXNzYWdlIiwiZXJyb3IiLCJsaXN0ZW4iXSwic291cmNlUm9vdCI6Ii9Vc2Vycy9qZXN1c2d0ei9Db2RlL0J1c2luZXNzL1dvcmxkSGVsbG8vV29ybGRIZWxsby9iYWNrZW5kLyIsInNvdXJjZXMiOlsic2VydmVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IG5vZGVtYWlsZXIgZnJvbSAnbm9kZW1haWxlcic7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IHBvcnQgPSAzMDAxO1xuXG4vLyBDb2RlIGxvZ2ljIGZvciB0aGUgTWlkZGxld2FyZSB0byBwYXJzZSBKU09OXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxuLy8gQ29kZSBsb2dpYyBlbmRwb2ludCB0byBoYW5kbGUgZm9ybSBzdWJtaXNzaW9uc1xuYXBwLnBvc3QoJy9hcGkvc2VuZEVtYWlsJywgYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gIHRyeSB7XG4gICAgY29uc3Qge1xuICAgICAgbmFtZSxcbiAgICAgIGVtYWlsLFxuICAgICAgcGhvbmUsXG4gICAgICB3ZWJzaXRlLFxuICAgICAgY29tcGFueU5hbWUsXG4gICAgICBob3dDYW5XZUhlbHAsXG4gICAgICBob3dEaWRZb3VIZWFyLFxuICAgIH0gPSByZXEuYm9keTtcblxuICAgIC8vIENvZGUgbG9naWMgdG8gY3JlYXRlIGEgbm9kZW1haWxlciB0cmFuc3BvcnRlclxuICAgIGNvbnN0IHRyYW5zcG9ydGVyID0gbm9kZW1haWxlci5jcmVhdGVUcmFuc3BvcnQoe1xuICAgICAgLy8gWW91ciBlbWFpbCBzZXJ2aWNlIFNNVFAgc2V0dGluZ3NcbiAgICAgIHNlcnZpY2U6ICdvdXRsb29rJyxcbiAgICAgIGF1dGg6IHtcbiAgICAgICAgdXNlcjogJ2d0ei5qZXN1c0BvdXRsb29rLmNvbScsXG4gICAgICAgIHBhc3N3b3JkOiAnUmVhY3QhNTg0OTExJyxcbiAgICAgIH0sXG4gICAgfSk7XG5cbiAgICAvLyBFbWFpbCBjb250ZW50XG4gICAgY29uc3QgbWFpbE9wdGlvbnMgPSB7XG4gICAgICBmcm9tOiAnZ3R6Lmplc3VzQG91dGxvb2suY29tJyxcbiAgICAgIHRvOiAncmVjaXBpZW50JyxcbiAgICAgIHN1YmplY3Q6ICdXb3JsZEhlbGxvIE5ldyBDb250YWN0IEZvcm0gU3VibWlzc2lvbicsXG4gICAgICBodG1sOiBgXG4gICAgICAgICAgICA8cD5OYW1lOiAke25hbWV9PC9wPlxuICAgICAgICAgICAgPHA+RW1haWw6ICR7ZW1haWx9PC9wPlxuICAgICAgICAgICAgPHA+UGhvbmU6ICR7cGhvbmV9PC9wPlxuICAgICAgICAgICAgPHA+V2Vic2l0ZTogJHt3ZWJzaXRlfTwvcD5cbiAgICAgICAgICAgIDxwPkNvbXBhbnkgTmFtZTogJHtjb21wYW55TmFtZX08L3A+XG4gICAgICAgICAgICA8cD5Ib3cgY2FuIHdlIGhlbHA6ICR7aG93Q2FuV2VIZWxwfTwvcD5cbiAgICAgICAgICAgIDxwPkhvdyBkaWQgeW91IGhlYXI6ICR7aG93RGlkWW91SGVhcn08L3A+XG4gICAgICAgICAgICBgLFxuICAgIH07XG5cbiAgICAvLyBTZW5kIGVtYWlsXG4gICAgY29uc3QgaW5mbyA9IGF3YWl0IHRyYW5zcG9ydGVyLnNlbmRNYWlsKG1haWxPcHRpb25zKTtcbiAgICBjb25zb2xlLmxvZygnRW1haWwgc2VudDonLCBpbmZvLnJlc3BvbnNlKTtcbiAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7IG1lc3NhZ2U6ICdFbWFpbCBzZW50IHN1Y2Nlc3NmdWxseScgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3Igc2VuZGluZyBlbWFpbDonLCBlcnJvci5tZXNzYWdlKTtcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbih7IGVycm9yOiAnSW50ZXJuYWwgU2VydmVyIEVycm9yJyB9KTtcbiAgfVxufSk7XG5cbi8vIFN0YXJ0IHRoZSBzZXJ2ZXJcbmFwcC5saXN0ZW4ocG9ydCwgKCkgPT4ge1xuICBjb25zb2xlLmxvZyhgU2VydmVyIGlzIHJ1bm5pbmcgb24gcG9ydCAke3BvcnR9YCk7XG59KTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsT0FBTyxNQUFNLFNBQVM7QUFDN0IsT0FBT0MsVUFBVSxNQUFNLFlBQVk7QUFDbkMsT0FBT0MsVUFBVSxNQUFNLGFBQWE7QUFFcEMsTUFBTUMsR0FBRyxHQUFHSCxPQUFPLENBQUMsQ0FBQztBQUNyQixNQUFNSSxJQUFJLEdBQUcsSUFBSTs7QUFFakI7QUFDQUQsR0FBRyxDQUFDRSxHQUFHLENBQUNILFVBQVUsQ0FBQ0ksSUFBSSxDQUFDLENBQUMsQ0FBQzs7QUFFMUI7QUFDQUgsR0FBRyxDQUFDSSxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsT0FBT0MsR0FBRyxFQUFFQyxHQUFHLEtBQUs7RUFDN0MsSUFBSTtJQUNGLE1BQU07TUFDSkMsSUFBSTtNQUNKQyxLQUFLO01BQ0xDLEtBQUs7TUFDTEMsT0FBTztNQUNQQyxXQUFXO01BQ1hDLFlBQVk7TUFDWkM7SUFDRixDQUFDLEdBQUdSLEdBQUcsQ0FBQ1MsSUFBSTs7SUFFWjtJQUNBLE1BQU1DLFdBQVcsR0FBR2pCLFVBQVUsQ0FBQ2tCLGVBQWUsQ0FBQztNQUM3QztNQUNBQyxPQUFPLEVBQUUsU0FBUztNQUNsQkMsSUFBSSxFQUFFO1FBQ0pDLElBQUksRUFBRSx1QkFBdUI7UUFDN0JDLFFBQVEsRUFBRTtNQUNaO0lBQ0YsQ0FBQyxDQUFDOztJQUVGO0lBQ0EsTUFBTUMsV0FBVyxHQUFHO01BQ2xCQyxJQUFJLEVBQUUsdUJBQXVCO01BQzdCQyxFQUFFLEVBQUUsV0FBVztNQUNmQyxPQUFPLEVBQUUsd0NBQXdDO01BQ2pEQyxJQUFJLEVBQUc7QUFDYix1QkFBdUJsQixJQUFLO0FBQzVCLHdCQUF3QkMsS0FBTTtBQUM5Qix3QkFBd0JDLEtBQU07QUFDOUIsMEJBQTBCQyxPQUFRO0FBQ2xDLCtCQUErQkMsV0FBWTtBQUMzQyxrQ0FBa0NDLFlBQWE7QUFDL0MsbUNBQW1DQyxhQUFjO0FBQ2pEO0lBQ0ksQ0FBQzs7SUFFRDtJQUNBLE1BQU1hLElBQUksR0FBRyxNQUFNWCxXQUFXLENBQUNZLFFBQVEsQ0FBQ04sV0FBVyxDQUFDO0lBQ3BETyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxhQUFhLEVBQUVILElBQUksQ0FBQ0ksUUFBUSxDQUFDO0lBQ3pDeEIsR0FBRyxDQUFDeUIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDNUIsSUFBSSxDQUFDO01BQUU2QixPQUFPLEVBQUU7SUFBMEIsQ0FBQyxDQUFDO0VBQzlELENBQUMsQ0FBQyxPQUFPQyxLQUFLLEVBQUU7SUFDZEwsT0FBTyxDQUFDSyxLQUFLLENBQUMsc0JBQXNCLEVBQUVBLEtBQUssQ0FBQ0QsT0FBTyxDQUFDO0lBQ3BEMUIsR0FBRyxDQUFDeUIsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDNUIsSUFBSSxDQUFDO01BQUU4QixLQUFLLEVBQUU7SUFBd0IsQ0FBQyxDQUFDO0VBQzFEO0FBQ0YsQ0FBQyxDQUFDOztBQUVGO0FBQ0FqQyxHQUFHLENBQUNrQyxNQUFNLENBQUNqQyxJQUFJLEVBQUUsTUFBTTtFQUNyQjJCLE9BQU8sQ0FBQ0MsR0FBRyxDQUFFLDZCQUE0QjVCLElBQUssRUFBQyxDQUFDO0FBQ2xELENBQUMsQ0FBQyJ9","map":{"version":3,"names":["express","nodemailer","bodyParser","app","port","use","json","post","req","res","name","email","phone","website","companyName","howCanWeHelp","howDidYouHear","body","transporter","createTransport","service","auth","user","password","mailOptions","from","to","subject","html","info","sendMail","console","log","response","status","message","error","listen"],"sourceRoot":"/Users/jesusgtz/Code/Business/WorldHello/WorldHello/backend/","sources":["server.js"],"sourcesContent":["import express from 'express';\nimport nodemailer from 'nodemailer';\nimport bodyParser from 'body-parser';\n\nconst app = express();\nconst port = 3001;\n\n// Code logic for the Middleware to parse JSON\napp.use(bodyParser.json());\n\n// Code logic endpoint to handle form submissions\napp.post('/api/sendEmail', async (req, res) => {\n  try {\n    const {\n      name,\n      email,\n      phone,\n      website,\n      companyName,\n      howCanWeHelp,\n      howDidYouHear,\n    } = req.body;\n\n    // Code logic to create a nodemailer transporter\n    const transporter = nodemailer.createTransport({\n      // Your email service SMTP settings\n      service: 'outlook',\n      auth: {\n        user: 'gtz.jesus@outlook.com',\n        password: 'React!584911',\n      },\n    });\n\n    // Email content\n    const mailOptions = {\n      from: 'gtz.jesus@outlook.com',\n      to: 'recipient',\n      subject: 'WorldHello New Contact Form Submission',\n      html: `\n            <p>Name: ${name}</p>\n            <p>Email: ${email}</p>\n            <p>Phone: ${phone}</p>\n            <p>Website: ${website}</p>\n            <p>Company Name: ${companyName}</p>\n            <p>How can we help: ${howCanWeHelp}</p>\n            <p>How did you hear: ${howDidYouHear}</p>\n            `,\n    };\n\n    // Send email\n    const info = await transporter.sendMail(mailOptions);\n    console.log('Email sent:', info.response);\n    res.status(200).json({ message: 'Email sent successfully' });\n  } catch (error) {\n    console.error('Error sending email:', error.message);\n    res.status(500).json({ error: 'Internal Server Error' });\n  }\n});\n\n// Start the server\napp.listen(port, () => {\n  console.log(`Server is running on port ${port}`);\n});\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,UAAU,MAAM,aAAa;AAEpC,MAAMC,GAAG,GAAGH,OAAO,CAAC,CAAC;AACrB,MAAMI,IAAI,GAAG,IAAI;;AAEjB;AACAD,GAAG,CAACE,GAAG,CAACH,UAAU,CAACI,IAAI,CAAC,CAAC,CAAC;;AAE1B;AACAH,GAAG,CAACI,IAAI,CAAC,gBAAgB,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC7C,IAAI;IACF,MAAM;MACJC,IAAI;MACJC,KAAK;MACLC,KAAK;MACLC,OAAO;MACPC,WAAW;MACXC,YAAY;MACZC;IACF,CAAC,GAAGR,GAAG,CAACS,IAAI;;IAEZ;IACA,MAAMC,WAAW,GAAGjB,UAAU,CAACkB,eAAe,CAAC;MAC7C;MACAC,OAAO,EAAE,SAAS;MAClBC,IAAI,EAAE;QACJC,IAAI,EAAE,uBAAuB;QAC7BC,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;;IAEF;IACA,MAAMC,WAAW,GAAG;MAClBC,IAAI,EAAE,uBAAuB;MAC7BC,EAAE,EAAE,WAAW;MACfC,OAAO,EAAE,wCAAwC;MACjDC,IAAI,EAAG;AACb,uBAAuBlB,IAAK;AAC5B,wBAAwBC,KAAM;AAC9B,wBAAwBC,KAAM;AAC9B,0BAA0BC,OAAQ;AAClC,+BAA+BC,WAAY;AAC3C,kCAAkCC,YAAa;AAC/C,mCAAmCC,aAAc;AACjD;IACI,CAAC;;IAED;IACA,MAAMa,IAAI,GAAG,MAAMX,WAAW,CAACY,QAAQ,CAACN,WAAW,CAAC;IACpDO,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,IAAI,CAACI,QAAQ,CAAC;IACzCxB,GAAG,CAACyB,MAAM,CAAC,GAAG,CAAC,CAAC5B,IAAI,CAAC;MAAE6B,OAAO,EAAE;IAA0B,CAAC,CAAC;EAC9D,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdL,OAAO,CAACK,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACD,OAAO,CAAC;IACpD1B,GAAG,CAACyB,MAAM,CAAC,GAAG,CAAC,CAAC5B,IAAI,CAAC;MAAE8B,KAAK,EAAE;IAAwB,CAAC,CAAC;EAC1D;AACF,CAAC,CAAC;;AAEF;AACAjC,GAAG,CAACkC,MAAM,CAACjC,IAAI,EAAE,MAAM;EACrB2B,OAAO,CAACC,GAAG,CAAE,6BAA4B5B,IAAK,EAAC,CAAC;AAClD,CAAC,CAAC"}},"mtime":1706233481792}}